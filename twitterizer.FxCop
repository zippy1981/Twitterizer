<?xml version="1.0" encoding="utf-8"?>
<FxCopProject Version="1.36" Name="Twitterizer">
 <ProjectOptions>
  <SharedProject>True</SharedProject>
  <Stylesheet Apply="False">c:\program files (x86)\microsoft fxcop 1.36\Xml\FxCopReport.xsl</Stylesheet>
  <SaveMessages>
   <Project Status="Active, Excluded" NewOnly="False" />
   <Report Status="Active" NewOnly="False" />
  </SaveMessages>
  <ProjectFile Compress="True" DefaultTargetCheck="True" DefaultRuleCheck="True" SaveByRuleGroup="" Deterministic="True" />
  <EnableMultithreadedLoad>True</EnableMultithreadedLoad>
  <EnableMultithreadedAnalysis>True</EnableMultithreadedAnalysis>
  <SourceLookup>True</SourceLookup>
  <AnalysisExceptionsThreshold>10</AnalysisExceptionsThreshold>
  <RuleExceptionsThreshold>1</RuleExceptionsThreshold>
  <Spelling Locale="en-US" />
  <OverrideRuleVisibilities>False</OverrideRuleVisibilities>
  <CustomDictionaries SearchFxCopDir="True" SearchUserProfile="True" SearchProjectDir="True" />
  <SearchGlobalAssemblyCache>False</SearchGlobalAssemblyCache>
  <DeadlockDetectionTimeout>120</DeadlockDetectionTimeout>
  <IgnoreGeneratedCode>False</IgnoreGeneratedCode>
  <TargetFrameworkVersion>3.5</TargetFrameworkVersion>
 </ProjectOptions>
 <Targets>
  <Target Name="$(ProjectDir)/Twitterizer2/bin/Debug/Twitterizer2.dll" Analyze="True" AnalyzeAllChildren="True" />
 </Targets>
 <Rules>
  <RuleFiles>
   <RuleFile Name="$(FxCopDir)\Rules\DesignRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\GlobalizationRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\InteroperabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\MobilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\NamingRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PerformanceRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\PortabilityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\SecurityRules.dll" Enabled="True" AllRulesEnabled="True" />
   <RuleFile Name="$(FxCopDir)\Rules\UsageRules.dll" Enabled="True" AllRulesEnabled="True" />
  </RuleFiles>
  <Groups />
  <Settings />
 </Rules>
 <FxCopReport Version="1.36">
  <Targets>
   <Target Name="$(ProjectDir)/Twitterizer2/bin/Debug/Twitterizer2.dll">
    <Modules>
     <Module Name="twitterizer2.dll">
      <Namespaces>
       <Namespace Name="Twitterizer">
        <Types>
         <Type Name="OAuthTokenResponse">
          <Messages>
           <Message Id="OAuth" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Excluded" Created="2010-03-03 18:10:14Z">
            <Issue Name="TypeShouldBeDiscreteTerm">
             <Item>OAuth</Item>
             <Item>'OAuthTokenResponse'</Item>
             <Item>Oauth</Item>
            </Issue>
            <Notes>
             <User Name="patricks">
              <Note Id="0" />
             </User>
            </Notes>
           </Message>
          </Messages>
         </Type>
         <Type Name="OAuthTokens">
          <Messages>
           <Message Id="OAuth" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Excluded" Created="2010-03-02 21:53:53Z">
            <Issue Name="TypeShouldBeDiscreteTerm">
             <Item>OAuth</Item>
             <Item>'OAuthTokens'</Item>
             <Item>Oauth</Item>
            </Issue>
            <Notes>
             <User Name="patricks">
              <Note Id="0" />
             </User>
            </Notes>
           </Message>
          </Messages>
         </Type>
         <Type Name="OAuthUtility">
          <Messages>
           <Message Id="OAuth" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Excluded" Created="2010-02-28 03:36:41Z">
            <Issue Name="TypeShouldBeDiscreteTerm">
             <Item>OAuth</Item>
             <Item>'OAuthUtility'</Item>
             <Item>Oauth</Item>
            </Issue>
            <Notes>
             <User Name="patricks">
              <Note Id="0" />
             </User>
            </Notes>
           </Message>
          </Messages>
          <Members>
           <Member Name="#EncodeForUrl(System.String)">
            <Messages>
             <Message TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055" Status="Excluded" Created="2010-03-03 18:35:54Z">
              <Issue>
               <Item>'OAuthUtility.EncodeForUrl(string)'</Item>
              </Issue>
              <Notes>
               <User Name="patricks">
                <Note Id="0" />
               </User>
              </Notes>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="TwitterDirectMessage">
          <Members>
           <Member Name="#Send(Twitterizer.OAuthTokens,System.String,System.String)">
            <Messages>
             <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Excluded" Created="2010-03-09 04:08:27Z">
              <Issue Name="MemberParameterShouldBeCompoundWord">
               <Item>'TwitterDirectMessage.Send(OAuthTokens, string, string)'</Item>
               <Item>username</Item>
               <Item>'username'</Item>
               <Item>userName</Item>
              </Issue>
              <Notes>
               <User Name="Ricky">
                <Note Id="0" />
               </User>
              </Notes>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="TwitterList">
          <Members>
           <Member Name="#Delete(Twitterizer.OAuthTokens,System.String,System.String)">
            <Messages>
             <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Excluded" Created="2010-03-20 18:57:19Z">
              <Issue Name="MemberParameterShouldBeCompoundWord">
               <Item>'TwitterList.Delete(OAuthTokens, string, string)'</Item>
               <Item>username</Item>
               <Item>'username'</Item>
               <Item>userName</Item>
              </Issue>
              <Notes>
               <User Name="Ricky">
                <Note Id="5" />
               </User>
              </Notes>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetList(Twitterizer.OAuthTokens,System.String,System.Int64)">
            <Messages>
             <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Excluded" Created="2010-03-20 18:57:19Z">
              <Issue Name="MemberParameterShouldBeCompoundWord">
               <Item>'TwitterList.GetList(OAuthTokens, string, long)'</Item>
               <Item>username</Item>
               <Item>'username'</Item>
               <Item>userName</Item>
              </Issue>
              <Notes>
               <User Name="Ricky">
                <Note Id="5" />
               </User>
              </Notes>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetList(Twitterizer.OAuthTokens,System.String,System.String)">
            <Messages>
             <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Excluded" Created="2010-03-20 18:57:19Z">
              <Issue Name="MemberParameterShouldBeCompoundWord">
               <Item>'TwitterList.GetList(OAuthTokens, string, string)'</Item>
               <Item>username</Item>
               <Item>'username'</Item>
               <Item>userName</Item>
              </Issue>
              <Notes>
               <User Name="Ricky">
                <Note Id="5" />
               </User>
              </Notes>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetLists(Twitterizer.OAuthTokens,System.String)">
            <Messages>
             <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Excluded" Created="2010-03-20 18:57:19Z">
              <Issue Name="MemberParameterShouldBeCompoundWord">
               <Item>'TwitterList.GetLists(OAuthTokens, string)'</Item>
               <Item>username</Item>
               <Item>'username'</Item>
               <Item>userName</Item>
              </Issue>
              <Notes>
               <User Name="Ricky">
                <Note Id="5" />
               </User>
              </Notes>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetStatuses(Twitterizer.OAuthTokens,System.String,System.Int64)">
            <Messages>
             <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Excluded" Created="2010-03-20 18:57:19Z">
              <Issue Name="MemberParameterShouldBeCompoundWord">
               <Item>'TwitterList.GetStatuses(OAuthTokens, string, long)'</Item>
               <Item>username</Item>
               <Item>'username'</Item>
               <Item>userName</Item>
              </Issue>
              <Notes>
               <User Name="Ricky">
                <Note Id="5" />
               </User>
              </Notes>
             </Message>
            </Messages>
           </Member>
           <Member Name="#New(Twitterizer.OAuthTokens,System.String,System.String,System.Boolean,System.String)">
            <Messages>
             <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Excluded" Created="2010-03-10 04:03:23Z">
              <Issue Name="MemberParameterShouldBeCompoundWord">
               <Item>'TwitterList.New(OAuthTokens, string, string, bool, string)'</Item>
               <Item>username</Item>
               <Item>'username'</Item>
               <Item>userName</Item>
              </Issue>
              <Notes>
               <User Name="Ricky">
                <Note Id="3" />
               </User>
              </Notes>
             </Message>
            </Messages>
           </Member>
           <Member Name="#Update(Twitterizer.OAuthTokens,System.String,System.Int64,System.String,System.Boolean,System.String)">
            <Messages>
             <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Excluded" Created="2010-03-10 04:22:34Z">
              <Issue Name="MemberParameterShouldBeCompoundWord">
               <Item>'TwitterList.Update(OAuthTokens, string, long, string, bool, string)'</Item>
               <Item>username</Item>
               <Item>'username'</Item>
               <Item>userName</Item>
              </Issue>
              <Notes>
               <User Name="Ricky">
                <Note Id="4" />
               </User>
              </Notes>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="TwitterListWrapper">
          <Messages>
           <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Excluded" Created="2010-03-20 18:57:19Z">
            <Issue>
             <Item>'TwitterListWrapper'</Item>
            </Issue>
            <Notes>
             <User Name="Ricky">
              <Note Id="6" />
             </User>
            </Notes>
           </Message>
          </Messages>
         </Type>
         <Type Name="TwitterUser">
          <Members>
           <Member Name="#DeleteFriendship(Twitterizer.OAuthTokens,System.String)">
            <Messages>
             <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Excluded" Created="2010-03-09 05:59:02Z">
              <Issue Name="MemberParameterShouldBeCompoundWord">
               <Item>'TwitterUser.DeleteFriendship(OAuthTokens, string)'</Item>
               <Item>username</Item>
               <Item>'username'</Item>
               <Item>userName</Item>
              </Issue>
              <Notes>
               <User Name="Ricky">
                <Note Id="2" />
               </User>
              </Notes>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetFriendship(System.String,System.String)">
            <Messages>
             <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Excluded" Created="2010-03-09 05:56:46Z">
              <Issue Name="MemberParameterShouldBeCompoundWord">
               <Item>'TwitterUser.GetFriendship(string, string)'</Item>
               <Item>username</Item>
               <Item>'username1'</Item>
               <Item>userName</Item>
              </Issue>
              <Issue Name="MemberParameterShouldBeCompoundWord">
               <Item>'TwitterUser.GetFriendship(string, string)'</Item>
               <Item>username</Item>
               <Item>'username2'</Item>
               <Item>userName</Item>
              </Issue>
              <Notes>
               <User Name="Ricky">
                <Note Id="1" />
               </User>
              </Notes>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetUser(System.String)">
            <Messages>
             <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Excluded" Created="2010-03-06 17:53:00Z">
              <Issue Name="MemberParameterShouldBeCompoundWord">
               <Item>'TwitterUser.GetUser(string)'</Item>
               <Item>username</Item>
               <Item>'username'</Item>
               <Item>userName</Item>
              </Issue>
              <Notes>
               <User Name="Ricky">
                <Note Id="0" />
               </User>
              </Notes>
             </Message>
            </Messages>
           </Member>
           <Member Name="#GetUser(Twitterizer.OAuthTokens,System.String)">
            <Messages>
             <Message Id="username" TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702" Status="Excluded" Created="2010-03-06 17:53:00Z">
              <Issue Name="MemberParameterShouldBeCompoundWord">
               <Item>'TwitterUser.GetUser(OAuthTokens, string)'</Item>
               <Item>username</Item>
               <Item>'username'</Item>
               <Item>userName</Item>
              </Issue>
              <Notes>
               <User Name="Ricky">
                <Note Id="0" />
               </User>
              </Notes>
             </Message>
            </Messages>
           </Member>
          </Members>
         </Type>
         <Type Name="TwitterUserWrapper">
          <Messages>
           <Message TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812" Status="Excluded" Created="2010-03-20 18:57:19Z">
            <Issue>
             <Item>'TwitterUserWrapper'</Item>
            </Issue>
            <Notes>
             <User Name="Ricky">
              <Note Id="6" />
             </User>
            </Notes>
           </Message>
          </Messages>
         </Type>
        </Types>
       </Namespace>
      </Namespaces>
     </Module>
    </Modules>
   </Target>
  </Targets>
  <Notes>
   <User Name="patricks">
    <Note Id="0" Modified="2010-03-03 18:46:30Z">OAuth is a proper noun.</Note>
   </User>
   <User Name="Ricky">
    <Note Id="0" Modified="2010-03-09 04:12:23Z">For our project, "username" will be the standard naming convention.</Note>
    <Note Id="1" Modified="2010-03-09 05:58:30Z">For our project, "username" will be the standard naming convention.</Note>
    <Note Id="2" Modified="2010-03-09 05:59:19Z">For our project, "username" will be the standard naming convention.</Note>
    <Note Id="3" Modified="2010-03-10 04:04:27Z">For our project, "username" will be the standard naming convention.</Note>
    <Note Id="4" Modified="2010-03-10 04:22:49Z">For our project, "username" will be the standard naming convention.</Note>
    <Note Id="5" Modified="2010-03-20 19:04:27Z">"username" is correct for our project.</Note>
    <Note Id="6" Modified="2010-03-20 19:04:59Z">Wrapper classes are instantiated by the deserializer, so do not show up in the assembly.</Note>
   </User>
  </Notes>
  <Rules>
   <Rule TypeName="AvoidUninstantiatedInternalClasses" Category="Microsoft.Performance" CheckId="CA1812">
    <Resolution Name="Default">{0} is an internal class that is apparently never instantiated. If so, remove the code from the assembly. If this class is intended to contain only static methods, consider adding a private constructor to prevent the compiler from generating a default constructor.</Resolution>
   </Rule>
   <Rule TypeName="CompoundWordsShouldBeCasedCorrectly" Category="Microsoft.Naming" CheckId="CA1702">
    <Resolution Name="MemberParameterShouldBeCompoundWord">In member {0}, the discrete term '{1}' in parameter name {2} should be expressed as a compound word, '{3}'.</Resolution>
    <Resolution Name="TypeShouldBeDiscreteTerm">The compound word '{0}' in type name {1} exists as a discrete term. If your usage is intended to be single word, case it as '{2}'.</Resolution>
   </Rule>
   <Rule TypeName="UriReturnValuesShouldNotBeStrings" Category="Microsoft.Design" CheckId="CA1055">
    <Resolution Name="Default">Change the return type of {0} from string to System.Uri.</Resolution>
   </Rule>
  </Rules>
 </FxCopReport>
</FxCopProject>
